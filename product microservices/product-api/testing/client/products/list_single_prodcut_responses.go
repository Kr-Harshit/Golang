// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Kr-Harshit/golang-example/product-microservices/product-api/testing/models"
)

// ListSingleProdcutReader is a Reader for the ListSingleProdcut structure.
type ListSingleProdcutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSingleProdcutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSingleProdcutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewListSingleProdcutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListSingleProdcutOK creates a ListSingleProdcutOK with default headers values
func NewListSingleProdcutOK() *ListSingleProdcutOK {
	return &ListSingleProdcutOK{}
}

/* ListSingleProdcutOK describes a response with status code 200, with default header values.

A Data Structure representing a single Product
*/
type ListSingleProdcutOK struct {
	Payload *models.Product
}

func (o *ListSingleProdcutOK) Error() string {
	return fmt.Sprintf("[GET /products/{id}][%d] listSingleProdcutOK  %+v", 200, o.Payload)
}
func (o *ListSingleProdcutOK) GetPayload() *models.Product {
	return o.Payload
}

func (o *ListSingleProdcutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Product)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSingleProdcutNotFound creates a ListSingleProdcutNotFound with default headers values
func NewListSingleProdcutNotFound() *ListSingleProdcutNotFound {
	return &ListSingleProdcutNotFound{}
}

/* ListSingleProdcutNotFound describes a response with status code 404, with default header values.

Generic Error message returned as string
*/
type ListSingleProdcutNotFound struct {
	Payload *models.GenericError
}

func (o *ListSingleProdcutNotFound) Error() string {
	return fmt.Sprintf("[GET /products/{id}][%d] listSingleProdcutNotFound  %+v", 404, o.Payload)
}
func (o *ListSingleProdcutNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ListSingleProdcutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
