basePath: /
consumes:
- application/json
definitions:
  GenericError:
    description: GenericError GenericError GenericError is a generic error message
      returned by a server
    properties:
      message:
        description: message
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/Kr-Harshit/golang-example/product-microservices/product-api/testing/models
  Product:
    description: Product defines the structure for an API product
    properties:
      _id:
        description: ID of product generated by system
        format: int64
        minimum: 1
        readOnly: true
        type: integer
        x-go-name: ID
      description:
        description: description of product
        maxLength: 10000
        type: string
        x-go-name: Description
      name:
        description: name of the product
        maxLength: 255
        type: string
        x-go-name: Name
      price:
        description: price of product
        format: double
        minimum: 0.01
        type: number
        x-go-name: Price
      sku:
        description: SKU of product
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
    required:
    - name
    - price
    - sku
    type: object
    x-go-package: github.com/Kr-Harshit/golang-example/product-microservices/product-api/models
  Products:
    description: Products Products Products defines a slice of Product
    items:
      $ref: '#/definitions/Product'
    type: array
    x-go-package: github.com/Kr-Harshit/golang-example/product-microservices/product-api/testing/models
  ValidationError:
    description: ValidationError ValidationError ValidationError is a collection of
      vallidation error messages
    properties:
      messages:
        description: messages
        items:
          type: string
        type: array
        x-go-name: Messages
    type: object
    x-go-package: github.com/Kr-Harshit/golang-example/product-microservices/product-api/testing/models
info:
  description: Documentation for Product API
  title: of Product API
  version: 1.0.0
paths:
  /products:
    get:
      description: Returns a list of Products from the database
      operationId: listProducts
      parameters:
      - description: |-
          Currency used when returning the price of product
          when not specified currency is returned in USD
        in: query
        name: currency
        type: string
        x-go-name: Currency
      responses:
        "200":
          $ref: '#/responses/productsResponse'
      tags:
      - products
    post:
      description: Create a new product
      operationId: createProduct
      parameters:
      - description: |-
          Product data structure to update or create
          Note: the id field is ignored by create and update product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/errorResponse'
        "422":
          $ref: '#/responses/errorValidation'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - products
    put:
      description: Update a product details
      operationId: updateProduct
      parameters:
      - description: |-
          Product data structure to update or create
          Note: the id field is ignored by create and update product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "400":
          $ref: '#/responses/errorValidation'
        "404":
          $ref: '#/responses/errorResponse'
        "500":
          $ref: '#/responses/errorResponse'
      tags:
      - products
  /products/{id}:
    delete:
      description: Deletes a product in database
      operationId: deleteProduct
      parameters:
      - description: The id of Product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "201":
          $ref: '#/responses/noContentResponse'
        "404":
          $ref: '#/responses/errorResponse'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - products
    get:
      description: Returns a specific product from database
      operationId: listSingleProdcut
      parameters:
      - description: The id of Product for which the operation relates
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      - description: |-
          Currency used when returning the price of product
          when not specified currency is returned in USD
        in: query
        name: currency
        type: string
        x-go-name: Currency
      responses:
        "200":
          $ref: '#/responses/productResponse'
        "404":
          $ref: '#/responses/errorResponse'
      tags:
      - products
produces:
- application/json
responses:
  errorResponse:
    description: Generic Error message returned as string
    schema:
      $ref: '#/definitions/GenericError'
  errorValidation:
    description: Validation Error defined as an array of string
    schema:
      $ref: '#/definitions/ValidationError'
  noContentResponse:
    description: No content is returned by this API endpoint
  productResponse:
    description: A Data Structure representing a single Product
    schema:
      $ref: '#/definitions/Product'
  productsResponse:
    description: A list of products
    schema:
      $ref: '#/definitions/Products'
schemes:
- http
swagger: "2.0"
